services:
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./vote/docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - flask_app
    networks:
      - app-network 

  flask_app:
    build:
      context: ./vote
      dockerfile: docker/Dockerfile
    container_name: flask_app
    ports:
      - "5000"
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=postgres 
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - app-network
    
  result:
    build:
      context: ./result
      dockerfile: docker/Dockerfile
    container_name: result_app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=postgres
    networks:
      - app-network

  database:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./vote/docker/init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:


