name: Deploy to Staging
description: Deploys the application to the staging environment.

on:
  push:
    branches: [staging]
    paths:
      - 'voting-app-docker-ci-cd/**'
      - '.github/workflows/deploy-staging.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: [self-hosted, staging]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login en GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extraer metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker Vote (app flask)
        uses: docker/build-push-action@v5
        with:
          context: ./voting-app-docker-ci-cd/vote
          file: ./voting-app-docker-ci-cd/vote/docker/Dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build Docker Result (app nodejs)
        uses: docker/build-push-action@v5
        with:
          context: ./voting-app-docker-ci-cd/result
          file: ./voting-app-docker-ci-cd/result/docker/Dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build Docker Worker (app nodejs)
        uses: docker/build-push-action@v5
        with:
          context: ./voting-app-docker-ci-cd/worker
          file: ./voting-app-docker-ci-cd/worker/docker/Dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Detener contenedores antiguos
        run: |
          docker-compose -f ./voting-app-docker-ci-cd/docker-compose.staging.yml down

      - name: Deploy to Staging
        run: |
          docker-compose -f ./voting-app-docker-ci-cd/docker-compose.staging.yml up -d --build

      - name: Health Check
        run: |
          sleep 10
          echo "Check app Flask"
          curl -f http://localhost:5000/healthz || exit 1
          echo "Check app Node.js"
          curl -f http://localhost:3000/healthz || exit 1
          echo "Check app Worker"
          pgrep -f main.js || exit 1
